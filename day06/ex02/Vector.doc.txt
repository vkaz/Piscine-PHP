<- Vector ----------------------------------------------------------------------
The Vector Class will allow us to introduce a convention. To orient themselves in
3D we will work in a "Right hand" mark.
If you did you research on homogeneous coordinates when coding the Vertex Class,
you would have discovered that this representation allow you to drastically simplify some
calculations. We will also use a homogeneous system of coordinates for our vectors, but
this time, the component w will always be worth 0.0 and will considered as an arbitrary
vector component in the calculations, like x, y or z.

A vector is represented by the following characteristics:
• Its x magnitude
• Its y magnitude
• Its z magnitude
• The w coordinate

The Class constructor is waiting for an array. The following keys are required:
’dest’: the vector’s destination vertex, mandatory.
’orig’: the vector’s origin vertex, optional, by default is worth a new instance of
the x=0, y=0, z=0, w=1 vertex. An instance can be contructed from either (x, y, z) value:
$vtxO = new Vertex( array( 'x' => 0.0, 'y' => 0.0, 'z' => 0.0 ) ); 
$vtxX = new Vertex( array( 'x' => 1.0, 'y' => 0.0, 'z' => 0.0 ) );
new Vector( array( 'orig' => $vtxO, 'dest' => $vtxX ) );

Or you can use:
$dest1 = new Vertex( array( 'x' => -12.34, 'y' => 23.45, 'z' => -34.56 ) );
new Vector( array( 'dest' => $dest1 ) );

The class provides the following methods :
float magnitude() : returns the vector’s length (or "norm").
Vector normalize() : returns a normalized version of the vector. If the vector is
already normalized, returns a fresh copy of the vector.
Vector add( Vector $rhs ) : returns the sum vector of both vectors.
Vector sub( Vector $rhs ) : returns the difference vector of both vectors.
Vector opposite() : returns the opposite vector.
Vector scalarProduct( $k ) : returns the multiplication of the vector with a
scalar.
float dotProduct( Vector $rhs ) : returns the scalar multiplication of both vectors.
float cos( Vector $rhs ) : returns the angle’sAppendix cosine between both vectors.
Vector crossProduct( Vector $rhs ) : returns the cross multiplication of both
vectors (right-hand mark!)
---------------------------------------------------------------------- Vector ->
